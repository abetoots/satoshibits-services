name: üöÄ Release using changesets

on:
  push:
    branches:
      - main

permissions: write-all

env:
  PNPM_CACHE_FOLDER: ${{ github.workspace }}/.pnpm-store
  # changesets/action presumes the .npmrc is in $HOME so it doesn't respect the project's .npmrc
  # actions/setup-node sets up a .npmrc in $HOME and sets it from env.NODE_AUTH_TOKEN
  # See:
  # - https://github.com/changesets/action/issues/58
  # - https://github.com/changesets/action/issues/147
  # - https://github.com/actions/setup-node/blob/78148dae5052c4942d5b0f92719061df122a3b1c/src/authutil.ts#L41

  NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

# Ensure that only a single job or workflow using the same concurrency group will run at a time
# This negates the need for styfle/cancel-workflow-action
concurrency:
  # Ensures that we process concurrently by branch using `github.ref` as the key
  group: ${{ github.workflow }}-${{ github.ref }}
  # If a run is in progress for a specific branch, cancel the current run and start a new run
  cancel-in-progress: true

jobs:
  release:
    name: üöÄ Build and release
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        name: ‚ö°Ô∏è Cache pnpm store
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üì• Download deps
        run: pnpm install --prefer-offline

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm run ci:release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
# TODO Add step for publishing to JSR
